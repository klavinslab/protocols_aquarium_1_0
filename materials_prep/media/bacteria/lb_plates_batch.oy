# Chains lb plate protocols together:
#   1) Unsterile agar media prep
#   2) Autoclaving
#   3) Pouring
#   4) Moving


# FIXME: these should be parameterized once pour_lb_plates does the right dilutions
iptg = "No"
atc = "No"
xgal = "No"


# Arguments
argument
  n: number, "The number of batches to make (one batch makes about 35 plates)"
  antibiotic: string, "The type of antibiotic to add (Amp, Kan, Chlor, or None)"
end


# Places
place lb_agar_unsterile
  protocol: "materials_prep/media/bacteria/lb.pl"
  argument
    n_bottle: n
    add_agar: "Yes"
    volume: 800
  end
  group: "mediabay"
  marked: true
  start: now()
  window: minutes(60)
end

place autoclave
  protocol: "materials_prep/media/bacteria/autoclave_bacteria_media.pl"
  argument
    lb_agar_n: n
    lb_liquid_n: 0
    tb_liquid_n: 0
  end
  group: "mediabay"
  start: now()
  window: minutes(60)
end

# IDEA: make protocol to ask if source bottle is molten - return that value to metacol
# At metacol level, pseudocode is: if not all molten: go to place that launches melt protocol and return to state that
# launches the 'is it molten?' question, else: go to pour plates place
place pour_plates
  protocol: "materials_prep/media/bacteria/pour_lb_plates.pl"
  argument
    n: n
    volume: 800
    antibiotic: antibiotic
    iptg: iptg
    atc: atc
    xgal: xgal
  end
  group: "mediabay"
  marked: false
  start: now()
  window: minutes(20)
end

#place move_plates
#  protocol: "materials_prep/media/bacteria/lb.pl"
#  argument
#    n_bottle: n
#    add_agar: "Yes"
#  end
#  group: "mediabay"
#  marked: false
#  start: hours(16)
#  window: hours(8)
#end

# QA:
# always have cultures of (only) Amp+, Kan+, Chlor+ strains (watcher)
# amp+: SSJ128, id 4
# kan+: pLAB1, id 32
# chlor+: keio cassette plasmid, id 118
# 1) streak a single plate with antibiotic resistance+, resistence- strains
# 2) incubate
# 3) plate check protocol
# 4) if plate check protocol fails, throw out batch of plates

# Transitions
transition [lb_agar_unsterile] => [autoclave] when !error(0) && completed(0) end
transition [autoclave]         => [pour_plates] when !error(0) && completed(0) end
#transition [pour_plates]       => [move_plates] when !error(0) && completed(0) end
#transition [move_plates]       => [] when !error(0) && completed(0) end
